// Copyright 2015 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module web_view.mojom;

import "components/mus/public/interfaces/window_tree.mojom";
import "network/public/interfaces/url_loader.mojom";

enum ButtonState {
  ENABLED,
  DISABLED,
};

interface WebViewClient {
  // Page-generated request for a top level frame navigation.
  TopLevelNavigateRequest(mojo.URLRequest request);

  // Notification that the navigation has started. This can be useful for
  // navigations triggered from sources other than the page itself (e.g.
  // back/forward history navigation).
  TopLevelNavigationStarted(string url);

  // Loading and progress notifications.
  LoadingStateChanged(bool is_loading, double progress);
  BackForwardChanged(ButtonState back_button, ButtonState forward_button);

  // TODO(beng): also forward text direction.
  TitleChanged(string? title);

  // Reports the number of matches for a given Find() call.
  FindInPageMatchCountUpdated(int32 request_id, int32 count, bool final_update);

  // Reports which find match is selected. (If there are five highlighted
  // matches on a page, and the 2nd is selected, |active_match_ordinal| is 2.)
  FindInPageSelectionUpdated(int32 request_id, int32 active_match_ordinal);
};

interface WebView {
  // Navigate the top level frame to |request|.
  LoadRequest(mojo.URLRequest request);

  // Provide a WindowTreeClient for this specific WebView.
  GetWindowTreeClient(mus.mojom.WindowTreeClient& window_tree_client);

  // Finds a string in page.
  Find(string search_text, bool forward_direction);
  StopFinding();
  
  // Moves forward and backward.
  GoBack();
  GoForward();
};

interface WebViewFactory {
  CreateWebView(WebViewClient client, WebView& web_view);
};
