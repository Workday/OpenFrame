# Copyright 2014 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/config/ui.gni")

group("mojo") {
  # Meta-target, don't link into production code.
  testonly = true
  deps = [
    ":tests",
    "//mojo/common",
    "//mojo/services",
  ]

  if (!(is_linux && target_cpu == "x86")) {
    # TODO(GYP): Figure out if this needs to be supported. Right now
    # it won't work on x86 official builds because it needs stuff in the
    # sysroot that doesn't exist.
    deps += [ "//mojo/public" ]
  }

  if (is_android) {
    deps += [ "//mojo/android" ]
  }

  deps += [ "//mojo/runner" ]
}

# TODO(GYP): Delete this after we've converted everything to GN.
# The _run targets exist only for compatibility w/ GYP.
group("mojo_public_bindings_unittests_run") {
  testonly = true
  deps = [
    # TODO(use_chrome_edk): "//mojo/edk/test:mojo_public_bindings_unittests"
    "//third_party/mojo/src/mojo/edk/test:mojo_public_bindings_unittests",
  ]
}

# TODO(GYP): Delete this after we've converted everything to GN.
# The _run targets exist only for compatibility w/ GYP.
group("mojo_public_environment_unittests_run") {
  testonly = true
  deps = [
    # TODO(use_chrome_edk): "//mojo/edk/test:mojo_public_environment_unittests"
    "//third_party/mojo/src/mojo/edk/test:mojo_public_environment_unittests",
  ]
}

# TODO(GYP): Delete this after we've converted everything to GN.
# The _run targets exist only for compatibility w/ GYP.
group("mojo_public_system_unittests_run") {
  testonly = true
  deps = [
    # TODO(use_chrome_edk): "//mojo/edk/test:mojo_public_system_unittests"
    "//third_party/mojo/src/mojo/edk/test:mojo_public_system_unittests",
  ]
}

# TODO(GYP): Delete this after we've converted everything to GN.
# The _run targets exist only for compatibility w/ GYP.
group("mojo_public_utility_unittests_run") {
  testonly = true
  deps = [
    # TODO(use_chrome_edk): "//mojo/edk/test:mojo_public_utility_unittests"
    "//third_party/mojo/src/mojo/edk/test:mojo_public_utility_unittests",
  ]
}

group("tests") {
  testonly = true
  deps = [
    "//ipc/mojo:ipc_mojo_unittests",
    "//mojo/application/public/cpp/tests:mojo_public_application_unittests",
    "//mojo/common:mojo_common_unittests",
    "//mojo/converters/surfaces/tests:mojo_surfaces_lib_unittests",

    # TODO(use_chrome_edk):
    #"//mojo/edk/js/test:js_unittests",
    #"//mojo/edk/system:mojo_message_pipe_perftests",
    #"//mojo/edk/system:mojo_system_unittests",
    #"//mojo/edk/test:mojo_public_bindings_unittests",
    #"//mojo/edk/test:mojo_public_environment_unittests",
    #"//mojo/edk/test:mojo_public_system_perftests",
    #"//mojo/edk/test:mojo_public_system_unittests",
    #"//mojo/edk/test:mojo_public_utility_unittests",
    "//third_party/mojo/src/mojo/edk/js/test:js_unittests",
    "//third_party/mojo/src/mojo/edk/system:mojo_message_pipe_perftests",
    "//third_party/mojo/src/mojo/edk/system:mojo_system_unittests",
    "//third_party/mojo/src/mojo/edk/test:mojo_public_bindings_unittests",
    "//third_party/mojo/src/mojo/edk/test:mojo_public_environment_unittests",
    "//third_party/mojo/src/mojo/edk/test:mojo_public_system_perftests",
    "//third_party/mojo/src/mojo/edk/test:mojo_public_system_unittests",
    "//third_party/mojo/src/mojo/edk/test:mojo_public_utility_unittests",
  ]

  deps += [
    "//mojo/package_manager:unittests",
    "//mojo/services/network:apptests",
    "//mojo/shell:apptests",
    "//mojo/shell:mojo_shell_unittests",
  ]

  if (is_android) {
    deps += [ "//mojo/runner:mojo_runner_apptests_apk" ]
  }
}
